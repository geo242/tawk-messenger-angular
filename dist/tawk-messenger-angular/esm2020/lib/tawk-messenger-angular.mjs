import { Inject, Injectable, PLATFORM_ID, Optional } from "@angular/core";
import { DOCUMENT, isPlatformBrowser } from '@angular/common';
import * as i0 from "@angular/core";
export class TawkMessengerAngular {
    constructor(rendererFactory, platformId, document) {
        this.rendererFactory = rendererFactory;
        this.platformId = platformId;
        this.document = document;
        this.renderer = this.rendererFactory.createRenderer(null, null);
    }
    init(data) {
        if (!isPlatformBrowser(this.platformId)) {
            return;
        }
        window.Tawk_API = window.Tawk_API || {};
        window.Tawk_LoadStart = new Date();
        this.loadScript(data);
    }
    loadScript(data) {
        if (!isPlatformBrowser(this.platformId)) {
            return;
        }
        if (data.embedId && data.embedId.length) {
            /**
             * If the element with embedId as id we will create a new clement
             */
            if (!document.getElementById(data.embedId)) {
                const element = this.renderer.createElement('div');
                this.renderer.setProperty(element, 'id', data.embedId);
                // Append the created div to the body element
                this.renderer.appendChild(document.body, element);
            }
            window.Tawk_API.embedded = data.embedId;
        }
        const s1 = this.renderer.createElement('script');
        s1.type = 'text/javascript';
        s1.async = true;
        s1.src = `https://embed.tawk.to/${data.propertyId}/${data.widgetId}`;
        s1.charset = 'UTF-8';
        s1.setAttribute('crossorigin', '*');
        this.renderer.appendChild(this.document.head, s1);
    }
    hideWidget() {
        window.Tawk_API.hideWidget();
    }
    showWidget() {
        window.Tawk_API.showWidget();
    }
    maximize() {
        window.Tawk_API.maximize();
    }
    minimize() {
        window.Tawk_API.minimize();
    }
    toggle() {
        window.Tawk_API.toggle();
    }
    popup() {
        window.Tawk_API.popup();
    }
    toggleVisibility() {
        window.Tawk_API.toggleVisibility();
    }
    endChat() {
        window.Tawk_API.endChat();
    }
    getWindowType() {
        return window.Tawk_API.getWindowType();
    }
    getStatus() {
        return window.Tawk_API.getStatus();
    }
    isChatMaximized() {
        return window.Tawk_API.isChatMaximized();
    }
    isChatMinimized() {
        return window.Tawk_API.isChatMinimized();
    }
    isChatHidden() {
        return window.Tawk_API.isChatHidden();
    }
    isChatOngoing() {
        return window.Tawk_API.isChatOngoing();
    }
    isVisitorEngaged() {
        return window.Tawk_API.isVisitorEngaged();
    }
    onLoaded() {
        return window.Tawk_API.onLoaded();
    }
    onBeforeLoaded() {
        return window.Tawk_API.onBeforeLoaded();
    }
    widgetPosition() {
        return window.Tawk_API.widgetPosition();
    }
    visitor(data) {
        return window.Tawk_API.visitor = data;
    }
    setAttributes(attribute, callback) {
        window.Tawk_API.setAttributes(attribute, callback());
    }
    addEvent(event, metadata, callback) {
        window.Tawk_API.setAttributes(event, metadata, callback());
    }
    addTags(tags, callback) {
        window.Tawk_API.addTags(tags, callback());
    }
    removeTags(tags, callback) {
        window.Tawk_API.removeTags(tags, callback());
    }
    customStyle(customStyle) {
        if (customStyle) {
            return window.Tawk_API.customStyle = customStyle;
        }
        return;
    }
    onLoad(callback) {
        window.addEventListener('tawkLoad', () => {
            callback();
        });
    }
    onStatusChange(callback) {
        window.addEventListener('tawkStatusChange', (status) => {
            callback(status.detail);
        });
    }
    onBeforeLoad(callback) {
        window.addEventListener('tawkBeforeLoad', () => {
            callback();
        });
    }
    onChatMaximized(callback) {
        window.addEventListener('tawkChatMaximized', () => {
            callback();
        });
    }
    onChatMinimized(callback) {
        window.addEventListener('tawkChatMinimized', () => {
            callback();
        });
    }
    onChatHidden(callback) {
        window.addEventListener('tawkChatHidden', () => {
            callback();
        });
    }
    onChatStarted(callback) {
        window.addEventListener('tawkChatStarted', () => {
            callback();
        });
    }
    onChatEnded(callback) {
        window.addEventListener('tawkChatEnded', () => {
            callback();
        });
    }
    onPrechatSubmit(callback) {
        window.addEventListener('tawkPrechatSubmit', (data) => {
            callback(data.detail);
        });
    }
    onOfflineSubmit(callback) {
        window.addEventListener('tawkOfflineSubmit', (data) => {
            callback(data.detail);
        });
    }
    onChatMessageVisitor(callback) {
        window.addEventListener('tawkChatMessageVisitor', (message) => {
            callback(message.detail);
        });
    }
    onChatMessageAgent(callback) {
        window.addEventListener('tawkChatMessageAgent', (message) => {
            callback(message.detail);
        });
    }
    onChatMessageSystem(callback) {
        window.addEventListener('tawkChatMessageSystem', (message) => {
            callback(message.detail);
        });
    }
    onAgentJoinChat(callback) {
        window.addEventListener('tawkAgentJoinChat', (data) => {
            callback(data.detail);
        });
    }
    onAgentLeaveChat(callback) {
        window.addEventListener('tawkAgentLeaveChat', (data) => {
            callback(data.detail);
        });
    }
    onChatSatisfaction(callback) {
        window.addEventListener('tawkChatSatisfaction', (satisfaction) => {
            callback(satisfaction.detail);
        });
    }
    onVisitorNameChanged(callback) {
        window.addEventListener('tawkVisitorNameChanged', (visitorName) => {
            callback(visitorName.detail);
        });
    }
    onFileUpload(callback) {
        window.addEventListener('tawkFileUpload', (link) => {
            callback(link.detail);
        });
    }
    onTagsUpdated(callback) {
        window.addEventListener('tawkTagsUpdated', (data) => {
            callback(data.detail);
        });
    }
    onUnreadCountChanged(callback) {
        window.addEventListener('tawkUnreadCountChanged', (data) => {
            callback(data.detail);
        });
    }
}
TawkMessengerAngular.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.0.2", ngImport: i0, type: TawkMessengerAngular, deps: [{ token: i0.RendererFactory2 }, { token: PLATFORM_ID }, { token: DOCUMENT, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });
TawkMessengerAngular.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "13.0.2", ngImport: i0, type: TawkMessengerAngular, providedIn: 'root' });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.0.2", ngImport: i0, type: TawkMessengerAngular, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root'
                }]
        }], ctorParameters: function () { return [{ type: i0.RendererFactory2 }, { type: Object, decorators: [{
                    type: Inject,
                    args: [PLATFORM_ID]
                }] }, { type: undefined, decorators: [{
                    type: Optional
                }, {
                    type: Inject,
                    args: [DOCUMENT]
                }] }]; } });
//# sourceMappingURL=data:application/json;base64,